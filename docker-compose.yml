version: '3.8'
services:
  core:
    container_name: semaphore-core
    build:
      context: .
      dockerfile: Dockerfile.core
    restart: always
    command: ["tail", "-f", "/dev/null"]
    env_file:
      - .env
    platform: linux/amd64
    environment:
      - DB_LOCATION_STRING=${DB_LOCATION_STRING}
      - ISERIESSTORAGE_INSTANCE=${ISERIESSTORAGE_INSTANCE}
      - DSPEC_FOLDER_PATH=${DSPEC_FOLDER_PATH}
      - MODEL_FOLDER_PATH=${MODEL_FOLDER_PATH}
    depends_on:
      db:
        condition: service_healthy
    # networks:
    #   - semaphore-net
    volumes:
      - ./data:/app/data
    extra_hosts:
      - "host.docker.internal:host-gateway"
  api:
    container_name: semaphore-api
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile.api
    restart: always
    env_file:
      - .env
    environment:
      - DB_LOCATION_STRING=${DB_LOCATION_STRING}
      - ISERIESSTORAGE_INSTANCE=${ISERIESSTORAGE_INSTANCE}
      - DSPEC_FOLDER_PATH=${DSPEC_FOLDER_PATH}
      - MODEL_FOLDER_PATH=${MODEL_FOLDER_PATH}
    ports: 
      - "${API_HOST_PORT}:8000"
    depends_on:
      - db
    # networks:
    #   - semaphore-net
    volumes:
      - ./data:/app/data
    healthcheck:
      #So, when i was just using the curl function inside of the yml file it didn't want 
      #to use the external name? for the api: localhost:8888/whatever
      #but when you run the curl command in terminal it returns what it should return
      #so i'm trying to find a way to run a shell file for the healthcheck that ill run the
      #curl command and then maybe we could mess around and find a way to dynamically
      #put the url in that shell file / maybe change it to a python file? but 
      #just from preliminary research its kinda difficult to get the full url form fast api
      #HOWEVER i just can't get it to run this shell script ;-; it keeps saying it can't open the
      #file or that there is no such file and i'm sure it's a path thing but-
      test: ["CMD", "sh", "./apiHealthCheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
    extra_hosts:
      - "host.docker.internal:host-gateway"
  db:
    container_name: semaphore-db
    image: postgres:15.4
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${DB_HOST_PORT}:5432"
    command: ["postgres", "-c", "listen_addresses=*"]
    # networks:
    #   - semaphore-net
    volumes:
      - psql-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
volumes:
  psql-data:
# networks:
  # semaphore-net:
  #   driver: bridge

