# Start with the base image of tensorflow
FROM tensorflow/tensorflow:2.14.0

ARG SERVICE_ACCOUNT_USERNAME
ARG SERVICE_ACCOUNT_UID

# Install Python 3.10
RUN apt-get update && apt-get install -y python3.10

# No .pyc files created
ENV PYTHONDONTWRITEBYTECODE 1

# stdout and stderr sent to terminal
ENV PYTHONUNBUFFERED 1   

# Set the working directory to /app
WORKDIR /app

# Copy the requirements.txt file to the Docker image
COPY requirements.txt .

# Create a virtual environment and activate it
RUN python3 -m venv ./venv/vsem
RUN /bin/bash -c "source ./venv/vsem/bin/activate"

# Install the requirements using pip
RUN pip install -r requirements.txt

# Copy the source code from ./src to the Docker image
COPY . .

# Create the service account user, skip if it already exists
RUN if ! id -u ${SERVICE_ACCOUNT_USERNAME} >/dev/null 2>&1; then \
        if getent passwd ${SERVICE_ACCOUNT_UID} >/dev/null 2>&1; then \
            echo "Error: UID ${SERVICE_ACCOUNT_UID} is already in use. Exiting." >&2; \
            exit 1; \
        fi; \
        if [ ${SERVICE_ACCOUNT_UID} -lt 1000 ] || [ ${SERVICE_ACCOUNT_UID} -gt 60000 ]; then \
            echo "Error: UID ${SERVICE_ACCOUNT_UID} is outside the valid range (1000-60000). Exiting." >&2; \
            exit 1; \
        fi; \
        useradd --uid ${SERVICE_ACCOUNT_UID} --create-home ${SERVICE_ACCOUNT_USERNAME}; \
    fi
# Set permissions to the service account user first, before switching users
# this sets ownership of the user and user group
RUN chown -R ${SERVICE_ACCOUNT_USERNAME}:${SERVICE_ACCOUNT_USERNAME} /app

# Set the user to the service account user
USER ${SERVICE_ACCOUNT_USERNAME}

# Set the work directory to SRC such that imports work correctly
WORKDIR /app/src

# Set the command to run the apiDriver.py script when the Docker container starts
CMD ["uvicorn", "API.apiDriver:app", "--host", "0.0.0.0", "--port", "8000"]