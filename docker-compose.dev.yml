version: '3.8'
services:
  semaphore-dev-core:
    container_name: semaphore-dev-core
    build:
      context: .
      dockerfile: Dockerfile.dev.core
    # restart: always
    # command: ["python3", "src/init_db.py"]
    env_file:
      - .env
    platform: linux/amd64
    environment:
      - DB_LOCATION_STRING=${DB_LOCATION_STRING}
      - ISERIESSTORAGE_INSTANCE=${ISERIESSTORAGE_INSTANCE}
      - DSPEC_FOLDER_PATH=${DSPEC_FOLDER_PATH}
      - MODEL_FOLDER_PATH=${MODEL_FOLDER_PATH}
    depends_on:
      - semaphore-dev-db
    # networks:
    #   - semaphore-dev-net
    volumes:
      - .:/app
  semaphore-dev-api:
    container_name: semaphore-dev-api
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile.dev.api
    restart: always
    env_file:
      - .env
    environment:
      - DB_LOCATION_STRING=${DB_LOCATION_STRING}
      - ISERIESSTORAGE_INSTANCE=${ISERIESSTORAGE_INSTANCE}
      - DSPEC_FOLDER_PATH=${DSPEC_FOLDER_PATH}
      - MODEL_FOLDER_PATH=${MODEL_FOLDER_PATH}
    ports: 
      - "8000:8000"
    # networks:
    #   - semaphore-dev-net
    depends_on:
      - semaphore-dev-db
  semaphore-dev-db:
    container_name: semaphore-dev-psql
    image: postgres:15.4
    restart: always
    environment:
      POSTGRES_USER: root # use this to login to your database
      POSTGRES_PASSWORD: root # use this to login to your database
      POSTGRES_DB: semaphoredb
      # Hostname for database (container): host.docker.internal
      # Host port: 5432
    ports:
      - "5432:5432"
    command: ["postgres", "-c", "listen_addresses=*"]
    # networks:
    #   - semaphore-dev-net
    volumes:
    - psql-data:/var/lib/postgresql/data
    # - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql # enable this when there is a need to initialize the database
volumes:
  psql-data:
# networks:
#   semaphore-dev-net:

